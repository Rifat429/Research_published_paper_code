{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ffad1ad3",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-09-21T13:34:10.045641Z",
     "iopub.status.busy": "2024-09-21T13:34:10.045371Z",
     "iopub.status.idle": "2024-09-21T13:34:11.543664Z",
     "shell.execute_reply": "2024-09-21T13:34:11.542795Z"
    },
    "papermill": {
     "duration": 1.508399,
     "end_time": "2024-09-21T13:34:11.546049",
     "exception": false,
     "start_time": "2024-09-21T13:34:10.037650",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "\n",
    "# Define the root directories where your datasets are located\n",
    "segmented_directory = '/kaggle/input/leukemia/Segmented'\n",
    "original_directory = '/kaggle/input/leukemia/Original'\n",
    "\n",
    "# Initialize empty lists to store file paths and labels\n",
    "original_file_paths = []\n",
    "segmented_file_paths = []\n",
    "labels = []\n",
    "\n",
    "# Define a mapping from directory names to labels\n",
    "label_mapping = {\n",
    "    'Benign': 0,\n",
    "    'Early': 1,\n",
    "    'Pre': 2,\n",
    "    'Pro': 3\n",
    "}\n",
    "\n",
    "# Iterate through each subdirectory (class directory) in both the Segmented and Original directories\n",
    "for class_directory in os.listdir(segmented_directory):\n",
    "    segmented_class_path = os.path.join(segmented_directory, class_directory)\n",
    "    original_class_path = os.path.join(original_directory, class_directory)\n",
    "\n",
    "    # Check if it's a directory\n",
    "    if os.path.isdir(segmented_class_path) and os.path.isdir(original_class_path):\n",
    "        # Get the label for this class directory\n",
    "        label = label_mapping.get(class_directory, -1)  # Default to -1 if class not found\n",
    "        \n",
    "        # Iterate through each image file in the class directory\n",
    "        for segmented_image_file, original_image_file in zip(os.listdir(segmented_class_path), os.listdir(original_class_path)):\n",
    "            segmented_image_path = os.path.join(segmented_class_path, segmented_image_file)\n",
    "            original_image_path = os.path.join(original_class_path, original_image_file)\n",
    "            \n",
    "            # Append the file paths and label to the respective lists\n",
    "            segmented_file_paths.append(segmented_image_path)\n",
    "            original_file_paths.append(original_image_path)\n",
    "            labels.append(label)\n",
    "\n",
    "# Create a DataFrame\n",
    "df = pd.DataFrame({'Original_Img': original_file_paths, 'Segmented_Img': segmented_file_paths, 'Label': labels})\n",
    "\n",
    "# Optionally, you can shuffle the DataFrame if the order of the samples matters\n",
    "df = df.sample(frac=1).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "af9c3d2c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:34:11.559842Z",
     "iopub.status.busy": "2024-09-21T13:34:11.559481Z",
     "iopub.status.idle": "2024-09-21T13:34:46.463647Z",
     "shell.execute_reply": "2024-09-21T13:34:46.462533Z"
    },
    "papermill": {
     "duration": 34.913711,
     "end_time": "2024-09-21T13:34:46.466101",
     "exception": false,
     "start_time": "2024-09-21T13:34:11.552390",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.5\n",
      "  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import os\n",
    "import cv2  # You may need to install OpenCV\n",
    "from sklearn.model_selection import train_test_split\n",
    "import numpy as np\n",
    "\n",
    "# Image size\n",
    "fftn = 128\n",
    "fftm = 128\n",
    "\n",
    "# Assuming you have a DataFrame 'df' with columns 'Original_Img', 'Segmented_Img', and 'Label'\n",
    "# 'Original_Img' and 'Segmented_Img' contain file paths to original and segmented images,\n",
    "# and 'Label' contains class labels\n",
    "original_file_paths = df.Original_Img\n",
    "segmented_file_paths = df.Segmented_Img\n",
    "\n",
    "# Function to load and preprocess an image\n",
    "def load_and_preprocess_image(file_path, target_size=(fftn, fftm)):\n",
    "    # Load the image using OpenCV or any other image-loading library\n",
    "    img = cv2.imread(file_path)\n",
    "    # Resize the image to the target size\n",
    "    img = cv2.resize(img, target_size)\n",
    "    # Perform any additional preprocessing if needed\n",
    "    # e.g., normalizing pixel values\n",
    "    img = img / 255.0  # Normalize pixel values to [0, 1]\n",
    "    return img\n",
    "\n",
    "# Split the data into training (70%), testing (20%), and validation (10%) sets\n",
    "original_train_df, temp_df = train_test_split(df, test_size=0.3, random_state=42, stratify=df['Label'])\n",
    "original_test_df, val_df = train_test_split(temp_df, test_size=2/3, random_state=42, stratify=temp_df['Label'])\n",
    "\n",
    "# Load and preprocess the images for each split\n",
    "original_train_images = [load_and_preprocess_image(file_path) for file_path in original_train_df['Original_Img']]\n",
    "original_test_images = [load_and_preprocess_image(file_path) for file_path in original_test_df['Original_Img']]\n",
    "original_val_images = [load_and_preprocess_image(file_path) for file_path in val_df['Original_Img']]\n",
    "\n",
    "segmented_train_images = [load_and_preprocess_image(file_path) for file_path in original_train_df['Segmented_Img']]\n",
    "segmented_test_images = [load_and_preprocess_image(file_path) for file_path in original_test_df['Segmented_Img']]\n",
    "segmented_val_images = [load_and_preprocess_image(file_path) for file_path in val_df['Segmented_Img']]\n",
    "\n",
    "# Convert the lists of images to NumPy arrays\n",
    "X_train_original = np.array(original_train_images)\n",
    "X_test_original = np.array(original_test_images)\n",
    "X_val_original = np.array(original_val_images)\n",
    "\n",
    "X_train_segmented = np.array(segmented_train_images)\n",
    "X_test_segmented = np.array(segmented_test_images)\n",
    "X_val_segmented = np.array(segmented_val_images)\n",
    "\n",
    "# Get the corresponding labels\n",
    "y_train = original_train_df['Label'].values\n",
    "y_test = original_test_df['Label'].values\n",
    "y_val = val_df['Label'].values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a453ccfd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:34:46.480413Z",
     "iopub.status.busy": "2024-09-21T13:34:46.479721Z",
     "iopub.status.idle": "2024-09-21T13:34:57.366334Z",
     "shell.execute_reply": "2024-09-21T13:34:57.365408Z"
    },
    "papermill": {
     "duration": 10.906712,
     "end_time": "2024-09-21T13:34:57.379334",
     "exception": false,
     "start_time": "2024-09-21T13:34:46.472622",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/vgg16/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5\n",
      "58889256/58889256 [==============================] - 0s 0us/step\n",
      "Model: \"vgg16\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " input_1 (InputLayer)        [(None, 128, 128, 3)]     0         \n",
      "                                                                 \n",
      " block1_conv1 (Conv2D)       (None, 128, 128, 64)      1792      \n",
      "                                                                 \n",
      " block1_conv2 (Conv2D)       (None, 128, 128, 64)      36928     \n",
      "                                                                 \n",
      " block1_pool (MaxPooling2D)  (None, 64, 64, 64)        0         \n",
      "                                                                 \n",
      " block2_conv1 (Conv2D)       (None, 64, 64, 128)       73856     \n",
      "                                                                 \n",
      " block2_conv2 (Conv2D)       (None, 64, 64, 128)       147584    \n",
      "                                                                 \n",
      " block2_pool (MaxPooling2D)  (None, 32, 32, 128)       0         \n",
      "                                                                 \n",
      " block3_conv1 (Conv2D)       (None, 32, 32, 256)       295168    \n",
      "                                                                 \n",
      " block3_conv2 (Conv2D)       (None, 32, 32, 256)       590080    \n",
      "                                                                 \n",
      " block3_conv3 (Conv2D)       (None, 32, 32, 256)       590080    \n",
      "                                                                 \n",
      " block3_pool (MaxPooling2D)  (None, 16, 16, 256)       0         \n",
      "                                                                 \n",
      " block4_conv1 (Conv2D)       (None, 16, 16, 512)       1180160   \n",
      "                                                                 \n",
      " block4_conv2 (Conv2D)       (None, 16, 16, 512)       2359808   \n",
      "                                                                 \n",
      " block4_conv3 (Conv2D)       (None, 16, 16, 512)       2359808   \n",
      "                                                                 \n",
      " block4_pool (MaxPooling2D)  (None, 8, 8, 512)         0         \n",
      "                                                                 \n",
      " block5_conv1 (Conv2D)       (None, 8, 8, 512)         2359808   \n",
      "                                                                 \n",
      " block5_conv2 (Conv2D)       (None, 8, 8, 512)         2359808   \n",
      "                                                                 \n",
      " block5_conv3 (Conv2D)       (None, 8, 8, 512)         2359808   \n",
      "                                                                 \n",
      " block5_pool (MaxPooling2D)  (None, 4, 4, 512)         0         \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 14,714,688\n",
      "Trainable params: 0\n",
      "Non-trainable params: 14,714,688\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "from tensorflow.keras.applications import VGG16\n",
    "SIZE_X=128\n",
    "SIZE_Y=128\n",
    "\n",
    "#Load VGG16 model wothout classifier/fully connected layers\n",
    "#Load imagenet weights that we are going to use as feature generators\n",
    "VGG_model = VGG16(weights='imagenet', include_top=False, input_shape=(SIZE_X, SIZE_Y, 3))\n",
    "\n",
    "#Make loaded layers as non-trainable. This is important as we want to work with pre-trained weights\n",
    "for layer in VGG_model.layers:\n",
    "    layer.trainable = False\n",
    "    \n",
    "VGG_model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "fd9867dd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:34:57.401768Z",
     "iopub.status.busy": "2024-09-21T13:34:57.401486Z",
     "iopub.status.idle": "2024-09-21T13:35:01.925574Z",
     "shell.execute_reply": "2024-09-21T13:35:01.924507Z"
    },
    "papermill": {
     "duration": 4.830449,
     "end_time": "2024-09-21T13:35:02.220395",
     "exception": false,
     "start_time": "2024-09-21T13:34:57.389946",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/densenet/densenet121_weights_tf_dim_ordering_tf_kernels_notop.h5\n",
      "29084464/29084464 [==============================] - 0s 0us/step\n",
      "Model: \"densenet121\"\n",
      "__________________________________________________________________________________________________\n",
      " Layer (type)                   Output Shape         Param #     Connected to                     \n",
      "==================================================================================================\n",
      " input_2 (InputLayer)           [(None, 128, 128, 3  0           []                               \n",
      "                                )]                                                                \n",
      "                                                                                                  \n",
      " zero_padding2d (ZeroPadding2D)  (None, 134, 134, 3)  0          ['input_2[0][0]']                \n",
      "                                                                                                  \n",
      " conv1/conv (Conv2D)            (None, 64, 64, 64)   9408        ['zero_padding2d[0][0]']         \n",
      "                                                                                                  \n",
      " conv1/bn (BatchNormalization)  (None, 64, 64, 64)   256         ['conv1/conv[0][0]']             \n",
      "                                                                                                  \n",
      " conv1/relu (Activation)        (None, 64, 64, 64)   0           ['conv1/bn[0][0]']               \n",
      "                                                                                                  \n",
      " zero_padding2d_1 (ZeroPadding2  (None, 66, 66, 64)  0           ['conv1/relu[0][0]']             \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " pool1 (MaxPooling2D)           (None, 32, 32, 64)   0           ['zero_padding2d_1[0][0]']       \n",
      "                                                                                                  \n",
      " conv2_block1_0_bn (BatchNormal  (None, 32, 32, 64)  256         ['pool1[0][0]']                  \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block1_0_relu (Activatio  (None, 32, 32, 64)  0           ['conv2_block1_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block1_1_conv (Conv2D)   (None, 32, 32, 128)  8192        ['conv2_block1_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block1_1_bn (BatchNormal  (None, 32, 32, 128)  512        ['conv2_block1_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block1_1_relu (Activatio  (None, 32, 32, 128)  0          ['conv2_block1_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block1_2_conv (Conv2D)   (None, 32, 32, 32)   36864       ['conv2_block1_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block1_concat (Concatena  (None, 32, 32, 96)  0           ['pool1[0][0]',                  \n",
      " te)                                                              'conv2_block1_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block2_0_bn (BatchNormal  (None, 32, 32, 96)  384         ['conv2_block1_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block2_0_relu (Activatio  (None, 32, 32, 96)  0           ['conv2_block2_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block2_1_conv (Conv2D)   (None, 32, 32, 128)  12288       ['conv2_block2_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block2_1_bn (BatchNormal  (None, 32, 32, 128)  512        ['conv2_block2_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block2_1_relu (Activatio  (None, 32, 32, 128)  0          ['conv2_block2_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block2_2_conv (Conv2D)   (None, 32, 32, 32)   36864       ['conv2_block2_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block2_concat (Concatena  (None, 32, 32, 128)  0          ['conv2_block1_concat[0][0]',    \n",
      " te)                                                              'conv2_block2_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block3_0_bn (BatchNormal  (None, 32, 32, 128)  512        ['conv2_block2_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block3_0_relu (Activatio  (None, 32, 32, 128)  0          ['conv2_block3_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block3_1_conv (Conv2D)   (None, 32, 32, 128)  16384       ['conv2_block3_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block3_1_bn (BatchNormal  (None, 32, 32, 128)  512        ['conv2_block3_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block3_1_relu (Activatio  (None, 32, 32, 128)  0          ['conv2_block3_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block3_2_conv (Conv2D)   (None, 32, 32, 32)   36864       ['conv2_block3_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block3_concat (Concatena  (None, 32, 32, 160)  0          ['conv2_block2_concat[0][0]',    \n",
      " te)                                                              'conv2_block3_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block4_0_bn (BatchNormal  (None, 32, 32, 160)  640        ['conv2_block3_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block4_0_relu (Activatio  (None, 32, 32, 160)  0          ['conv2_block4_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block4_1_conv (Conv2D)   (None, 32, 32, 128)  20480       ['conv2_block4_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block4_1_bn (BatchNormal  (None, 32, 32, 128)  512        ['conv2_block4_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block4_1_relu (Activatio  (None, 32, 32, 128)  0          ['conv2_block4_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block4_2_conv (Conv2D)   (None, 32, 32, 32)   36864       ['conv2_block4_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block4_concat (Concatena  (None, 32, 32, 192)  0          ['conv2_block3_concat[0][0]',    \n",
      " te)                                                              'conv2_block4_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block5_0_bn (BatchNormal  (None, 32, 32, 192)  768        ['conv2_block4_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block5_0_relu (Activatio  (None, 32, 32, 192)  0          ['conv2_block5_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block5_1_conv (Conv2D)   (None, 32, 32, 128)  24576       ['conv2_block5_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block5_1_bn (BatchNormal  (None, 32, 32, 128)  512        ['conv2_block5_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block5_1_relu (Activatio  (None, 32, 32, 128)  0          ['conv2_block5_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block5_2_conv (Conv2D)   (None, 32, 32, 32)   36864       ['conv2_block5_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block5_concat (Concatena  (None, 32, 32, 224)  0          ['conv2_block4_concat[0][0]',    \n",
      " te)                                                              'conv2_block5_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block6_0_bn (BatchNormal  (None, 32, 32, 224)  896        ['conv2_block5_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block6_0_relu (Activatio  (None, 32, 32, 224)  0          ['conv2_block6_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block6_1_conv (Conv2D)   (None, 32, 32, 128)  28672       ['conv2_block6_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block6_1_bn (BatchNormal  (None, 32, 32, 128)  512        ['conv2_block6_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block6_1_relu (Activatio  (None, 32, 32, 128)  0          ['conv2_block6_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block6_2_conv (Conv2D)   (None, 32, 32, 32)   36864       ['conv2_block6_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv2_block6_concat (Concatena  (None, 32, 32, 256)  0          ['conv2_block5_concat[0][0]',    \n",
      " te)                                                              'conv2_block6_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " pool2_bn (BatchNormalization)  (None, 32, 32, 256)  1024        ['conv2_block6_concat[0][0]']    \n",
      "                                                                                                  \n",
      " pool2_relu (Activation)        (None, 32, 32, 256)  0           ['pool2_bn[0][0]']               \n",
      "                                                                                                  \n",
      " pool2_conv (Conv2D)            (None, 32, 32, 128)  32768       ['pool2_relu[0][0]']             \n",
      "                                                                                                  \n",
      " pool2_pool (AveragePooling2D)  (None, 16, 16, 128)  0           ['pool2_conv[0][0]']             \n",
      "                                                                                                  \n",
      " conv3_block1_0_bn (BatchNormal  (None, 16, 16, 128)  512        ['pool2_pool[0][0]']             \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block1_0_relu (Activatio  (None, 16, 16, 128)  0          ['conv3_block1_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block1_1_conv (Conv2D)   (None, 16, 16, 128)  16384       ['conv3_block1_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block1_1_bn (BatchNormal  (None, 16, 16, 128)  512        ['conv3_block1_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block1_1_relu (Activatio  (None, 16, 16, 128)  0          ['conv3_block1_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block1_2_conv (Conv2D)   (None, 16, 16, 32)   36864       ['conv3_block1_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block1_concat (Concatena  (None, 16, 16, 160)  0          ['pool2_pool[0][0]',             \n",
      " te)                                                              'conv3_block1_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block2_0_bn (BatchNormal  (None, 16, 16, 160)  640        ['conv3_block1_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block2_0_relu (Activatio  (None, 16, 16, 160)  0          ['conv3_block2_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block2_1_conv (Conv2D)   (None, 16, 16, 128)  20480       ['conv3_block2_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block2_1_bn (BatchNormal  (None, 16, 16, 128)  512        ['conv3_block2_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block2_1_relu (Activatio  (None, 16, 16, 128)  0          ['conv3_block2_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block2_2_conv (Conv2D)   (None, 16, 16, 32)   36864       ['conv3_block2_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block2_concat (Concatena  (None, 16, 16, 192)  0          ['conv3_block1_concat[0][0]',    \n",
      " te)                                                              'conv3_block2_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block3_0_bn (BatchNormal  (None, 16, 16, 192)  768        ['conv3_block2_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block3_0_relu (Activatio  (None, 16, 16, 192)  0          ['conv3_block3_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block3_1_conv (Conv2D)   (None, 16, 16, 128)  24576       ['conv3_block3_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block3_1_bn (BatchNormal  (None, 16, 16, 128)  512        ['conv3_block3_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block3_1_relu (Activatio  (None, 16, 16, 128)  0          ['conv3_block3_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block3_2_conv (Conv2D)   (None, 16, 16, 32)   36864       ['conv3_block3_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block3_concat (Concatena  (None, 16, 16, 224)  0          ['conv3_block2_concat[0][0]',    \n",
      " te)                                                              'conv3_block3_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block4_0_bn (BatchNormal  (None, 16, 16, 224)  896        ['conv3_block3_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block4_0_relu (Activatio  (None, 16, 16, 224)  0          ['conv3_block4_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block4_1_conv (Conv2D)   (None, 16, 16, 128)  28672       ['conv3_block4_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block4_1_bn (BatchNormal  (None, 16, 16, 128)  512        ['conv3_block4_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block4_1_relu (Activatio  (None, 16, 16, 128)  0          ['conv3_block4_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block4_2_conv (Conv2D)   (None, 16, 16, 32)   36864       ['conv3_block4_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block4_concat (Concatena  (None, 16, 16, 256)  0          ['conv3_block3_concat[0][0]',    \n",
      " te)                                                              'conv3_block4_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block5_0_bn (BatchNormal  (None, 16, 16, 256)  1024       ['conv3_block4_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block5_0_relu (Activatio  (None, 16, 16, 256)  0          ['conv3_block5_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block5_1_conv (Conv2D)   (None, 16, 16, 128)  32768       ['conv3_block5_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block5_1_bn (BatchNormal  (None, 16, 16, 128)  512        ['conv3_block5_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block5_1_relu (Activatio  (None, 16, 16, 128)  0          ['conv3_block5_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block5_2_conv (Conv2D)   (None, 16, 16, 32)   36864       ['conv3_block5_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block5_concat (Concatena  (None, 16, 16, 288)  0          ['conv3_block4_concat[0][0]',    \n",
      " te)                                                              'conv3_block5_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block6_0_bn (BatchNormal  (None, 16, 16, 288)  1152       ['conv3_block5_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block6_0_relu (Activatio  (None, 16, 16, 288)  0          ['conv3_block6_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block6_1_conv (Conv2D)   (None, 16, 16, 128)  36864       ['conv3_block6_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block6_1_bn (BatchNormal  (None, 16, 16, 128)  512        ['conv3_block6_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block6_1_relu (Activatio  (None, 16, 16, 128)  0          ['conv3_block6_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block6_2_conv (Conv2D)   (None, 16, 16, 32)   36864       ['conv3_block6_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block6_concat (Concatena  (None, 16, 16, 320)  0          ['conv3_block5_concat[0][0]',    \n",
      " te)                                                              'conv3_block6_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block7_0_bn (BatchNormal  (None, 16, 16, 320)  1280       ['conv3_block6_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block7_0_relu (Activatio  (None, 16, 16, 320)  0          ['conv3_block7_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block7_1_conv (Conv2D)   (None, 16, 16, 128)  40960       ['conv3_block7_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block7_1_bn (BatchNormal  (None, 16, 16, 128)  512        ['conv3_block7_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block7_1_relu (Activatio  (None, 16, 16, 128)  0          ['conv3_block7_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block7_2_conv (Conv2D)   (None, 16, 16, 32)   36864       ['conv3_block7_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block7_concat (Concatena  (None, 16, 16, 352)  0          ['conv3_block6_concat[0][0]',    \n",
      " te)                                                              'conv3_block7_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block8_0_bn (BatchNormal  (None, 16, 16, 352)  1408       ['conv3_block7_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block8_0_relu (Activatio  (None, 16, 16, 352)  0          ['conv3_block8_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block8_1_conv (Conv2D)   (None, 16, 16, 128)  45056       ['conv3_block8_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block8_1_bn (BatchNormal  (None, 16, 16, 128)  512        ['conv3_block8_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block8_1_relu (Activatio  (None, 16, 16, 128)  0          ['conv3_block8_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block8_2_conv (Conv2D)   (None, 16, 16, 32)   36864       ['conv3_block8_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block8_concat (Concatena  (None, 16, 16, 384)  0          ['conv3_block7_concat[0][0]',    \n",
      " te)                                                              'conv3_block8_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block9_0_bn (BatchNormal  (None, 16, 16, 384)  1536       ['conv3_block8_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block9_0_relu (Activatio  (None, 16, 16, 384)  0          ['conv3_block9_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block9_1_conv (Conv2D)   (None, 16, 16, 128)  49152       ['conv3_block9_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block9_1_bn (BatchNormal  (None, 16, 16, 128)  512        ['conv3_block9_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block9_1_relu (Activatio  (None, 16, 16, 128)  0          ['conv3_block9_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block9_2_conv (Conv2D)   (None, 16, 16, 32)   36864       ['conv3_block9_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block9_concat (Concatena  (None, 16, 16, 416)  0          ['conv3_block8_concat[0][0]',    \n",
      " te)                                                              'conv3_block9_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv3_block10_0_bn (BatchNorma  (None, 16, 16, 416)  1664       ['conv3_block9_concat[0][0]']    \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv3_block10_0_relu (Activati  (None, 16, 16, 416)  0          ['conv3_block10_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv3_block10_1_conv (Conv2D)  (None, 16, 16, 128)  53248       ['conv3_block10_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv3_block10_1_bn (BatchNorma  (None, 16, 16, 128)  512        ['conv3_block10_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv3_block10_1_relu (Activati  (None, 16, 16, 128)  0          ['conv3_block10_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv3_block10_2_conv (Conv2D)  (None, 16, 16, 32)   36864       ['conv3_block10_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv3_block10_concat (Concaten  (None, 16, 16, 448)  0          ['conv3_block9_concat[0][0]',    \n",
      " ate)                                                             'conv3_block10_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv3_block11_0_bn (BatchNorma  (None, 16, 16, 448)  1792       ['conv3_block10_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv3_block11_0_relu (Activati  (None, 16, 16, 448)  0          ['conv3_block11_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv3_block11_1_conv (Conv2D)  (None, 16, 16, 128)  57344       ['conv3_block11_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv3_block11_1_bn (BatchNorma  (None, 16, 16, 128)  512        ['conv3_block11_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv3_block11_1_relu (Activati  (None, 16, 16, 128)  0          ['conv3_block11_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv3_block11_2_conv (Conv2D)  (None, 16, 16, 32)   36864       ['conv3_block11_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv3_block11_concat (Concaten  (None, 16, 16, 480)  0          ['conv3_block10_concat[0][0]',   \n",
      " ate)                                                             'conv3_block11_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv3_block12_0_bn (BatchNorma  (None, 16, 16, 480)  1920       ['conv3_block11_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv3_block12_0_relu (Activati  (None, 16, 16, 480)  0          ['conv3_block12_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv3_block12_1_conv (Conv2D)  (None, 16, 16, 128)  61440       ['conv3_block12_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv3_block12_1_bn (BatchNorma  (None, 16, 16, 128)  512        ['conv3_block12_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv3_block12_1_relu (Activati  (None, 16, 16, 128)  0          ['conv3_block12_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv3_block12_2_conv (Conv2D)  (None, 16, 16, 32)   36864       ['conv3_block12_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv3_block12_concat (Concaten  (None, 16, 16, 512)  0          ['conv3_block11_concat[0][0]',   \n",
      " ate)                                                             'conv3_block12_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " pool3_bn (BatchNormalization)  (None, 16, 16, 512)  2048        ['conv3_block12_concat[0][0]']   \n",
      "                                                                                                  \n",
      " pool3_relu (Activation)        (None, 16, 16, 512)  0           ['pool3_bn[0][0]']               \n",
      "                                                                                                  \n",
      " pool3_conv (Conv2D)            (None, 16, 16, 256)  131072      ['pool3_relu[0][0]']             \n",
      "                                                                                                  \n",
      " pool3_pool (AveragePooling2D)  (None, 8, 8, 256)    0           ['pool3_conv[0][0]']             \n",
      "                                                                                                  \n",
      " conv4_block1_0_bn (BatchNormal  (None, 8, 8, 256)   1024        ['pool3_pool[0][0]']             \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block1_0_relu (Activatio  (None, 8, 8, 256)   0           ['conv4_block1_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block1_1_conv (Conv2D)   (None, 8, 8, 128)    32768       ['conv4_block1_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block1_1_bn (BatchNormal  (None, 8, 8, 128)   512         ['conv4_block1_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block1_1_relu (Activatio  (None, 8, 8, 128)   0           ['conv4_block1_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block1_2_conv (Conv2D)   (None, 8, 8, 32)     36864       ['conv4_block1_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block1_concat (Concatena  (None, 8, 8, 288)   0           ['pool3_pool[0][0]',             \n",
      " te)                                                              'conv4_block1_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block2_0_bn (BatchNormal  (None, 8, 8, 288)   1152        ['conv4_block1_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block2_0_relu (Activatio  (None, 8, 8, 288)   0           ['conv4_block2_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block2_1_conv (Conv2D)   (None, 8, 8, 128)    36864       ['conv4_block2_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block2_1_bn (BatchNormal  (None, 8, 8, 128)   512         ['conv4_block2_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block2_1_relu (Activatio  (None, 8, 8, 128)   0           ['conv4_block2_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block2_2_conv (Conv2D)   (None, 8, 8, 32)     36864       ['conv4_block2_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block2_concat (Concatena  (None, 8, 8, 320)   0           ['conv4_block1_concat[0][0]',    \n",
      " te)                                                              'conv4_block2_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block3_0_bn (BatchNormal  (None, 8, 8, 320)   1280        ['conv4_block2_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block3_0_relu (Activatio  (None, 8, 8, 320)   0           ['conv4_block3_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block3_1_conv (Conv2D)   (None, 8, 8, 128)    40960       ['conv4_block3_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block3_1_bn (BatchNormal  (None, 8, 8, 128)   512         ['conv4_block3_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block3_1_relu (Activatio  (None, 8, 8, 128)   0           ['conv4_block3_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block3_2_conv (Conv2D)   (None, 8, 8, 32)     36864       ['conv4_block3_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block3_concat (Concatena  (None, 8, 8, 352)   0           ['conv4_block2_concat[0][0]',    \n",
      " te)                                                              'conv4_block3_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block4_0_bn (BatchNormal  (None, 8, 8, 352)   1408        ['conv4_block3_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block4_0_relu (Activatio  (None, 8, 8, 352)   0           ['conv4_block4_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block4_1_conv (Conv2D)   (None, 8, 8, 128)    45056       ['conv4_block4_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block4_1_bn (BatchNormal  (None, 8, 8, 128)   512         ['conv4_block4_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block4_1_relu (Activatio  (None, 8, 8, 128)   0           ['conv4_block4_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block4_2_conv (Conv2D)   (None, 8, 8, 32)     36864       ['conv4_block4_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block4_concat (Concatena  (None, 8, 8, 384)   0           ['conv4_block3_concat[0][0]',    \n",
      " te)                                                              'conv4_block4_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block5_0_bn (BatchNormal  (None, 8, 8, 384)   1536        ['conv4_block4_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block5_0_relu (Activatio  (None, 8, 8, 384)   0           ['conv4_block5_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block5_1_conv (Conv2D)   (None, 8, 8, 128)    49152       ['conv4_block5_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block5_1_bn (BatchNormal  (None, 8, 8, 128)   512         ['conv4_block5_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block5_1_relu (Activatio  (None, 8, 8, 128)   0           ['conv4_block5_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block5_2_conv (Conv2D)   (None, 8, 8, 32)     36864       ['conv4_block5_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block5_concat (Concatena  (None, 8, 8, 416)   0           ['conv4_block4_concat[0][0]',    \n",
      " te)                                                              'conv4_block5_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block6_0_bn (BatchNormal  (None, 8, 8, 416)   1664        ['conv4_block5_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block6_0_relu (Activatio  (None, 8, 8, 416)   0           ['conv4_block6_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block6_1_conv (Conv2D)   (None, 8, 8, 128)    53248       ['conv4_block6_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block6_1_bn (BatchNormal  (None, 8, 8, 128)   512         ['conv4_block6_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block6_1_relu (Activatio  (None, 8, 8, 128)   0           ['conv4_block6_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block6_2_conv (Conv2D)   (None, 8, 8, 32)     36864       ['conv4_block6_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block6_concat (Concatena  (None, 8, 8, 448)   0           ['conv4_block5_concat[0][0]',    \n",
      " te)                                                              'conv4_block6_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block7_0_bn (BatchNormal  (None, 8, 8, 448)   1792        ['conv4_block6_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block7_0_relu (Activatio  (None, 8, 8, 448)   0           ['conv4_block7_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block7_1_conv (Conv2D)   (None, 8, 8, 128)    57344       ['conv4_block7_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block7_1_bn (BatchNormal  (None, 8, 8, 128)   512         ['conv4_block7_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block7_1_relu (Activatio  (None, 8, 8, 128)   0           ['conv4_block7_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block7_2_conv (Conv2D)   (None, 8, 8, 32)     36864       ['conv4_block7_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block7_concat (Concatena  (None, 8, 8, 480)   0           ['conv4_block6_concat[0][0]',    \n",
      " te)                                                              'conv4_block7_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block8_0_bn (BatchNormal  (None, 8, 8, 480)   1920        ['conv4_block7_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block8_0_relu (Activatio  (None, 8, 8, 480)   0           ['conv4_block8_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block8_1_conv (Conv2D)   (None, 8, 8, 128)    61440       ['conv4_block8_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block8_1_bn (BatchNormal  (None, 8, 8, 128)   512         ['conv4_block8_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block8_1_relu (Activatio  (None, 8, 8, 128)   0           ['conv4_block8_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block8_2_conv (Conv2D)   (None, 8, 8, 32)     36864       ['conv4_block8_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block8_concat (Concatena  (None, 8, 8, 512)   0           ['conv4_block7_concat[0][0]',    \n",
      " te)                                                              'conv4_block8_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block9_0_bn (BatchNormal  (None, 8, 8, 512)   2048        ['conv4_block8_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block9_0_relu (Activatio  (None, 8, 8, 512)   0           ['conv4_block9_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block9_1_conv (Conv2D)   (None, 8, 8, 128)    65536       ['conv4_block9_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block9_1_bn (BatchNormal  (None, 8, 8, 128)   512         ['conv4_block9_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block9_1_relu (Activatio  (None, 8, 8, 128)   0           ['conv4_block9_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block9_2_conv (Conv2D)   (None, 8, 8, 32)     36864       ['conv4_block9_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block9_concat (Concatena  (None, 8, 8, 544)   0           ['conv4_block8_concat[0][0]',    \n",
      " te)                                                              'conv4_block9_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv4_block10_0_bn (BatchNorma  (None, 8, 8, 544)   2176        ['conv4_block9_concat[0][0]']    \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block10_0_relu (Activati  (None, 8, 8, 544)   0           ['conv4_block10_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block10_1_conv (Conv2D)  (None, 8, 8, 128)    69632       ['conv4_block10_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block10_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block10_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block10_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block10_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block10_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block10_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block10_concat (Concaten  (None, 8, 8, 576)   0           ['conv4_block9_concat[0][0]',    \n",
      " ate)                                                             'conv4_block10_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block11_0_bn (BatchNorma  (None, 8, 8, 576)   2304        ['conv4_block10_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block11_0_relu (Activati  (None, 8, 8, 576)   0           ['conv4_block11_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block11_1_conv (Conv2D)  (None, 8, 8, 128)    73728       ['conv4_block11_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block11_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block11_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block11_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block11_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block11_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block11_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block11_concat (Concaten  (None, 8, 8, 608)   0           ['conv4_block10_concat[0][0]',   \n",
      " ate)                                                             'conv4_block11_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block12_0_bn (BatchNorma  (None, 8, 8, 608)   2432        ['conv4_block11_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block12_0_relu (Activati  (None, 8, 8, 608)   0           ['conv4_block12_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block12_1_conv (Conv2D)  (None, 8, 8, 128)    77824       ['conv4_block12_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block12_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block12_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block12_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block12_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block12_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block12_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block12_concat (Concaten  (None, 8, 8, 640)   0           ['conv4_block11_concat[0][0]',   \n",
      " ate)                                                             'conv4_block12_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block13_0_bn (BatchNorma  (None, 8, 8, 640)   2560        ['conv4_block12_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block13_0_relu (Activati  (None, 8, 8, 640)   0           ['conv4_block13_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block13_1_conv (Conv2D)  (None, 8, 8, 128)    81920       ['conv4_block13_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block13_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block13_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block13_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block13_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block13_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block13_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block13_concat (Concaten  (None, 8, 8, 672)   0           ['conv4_block12_concat[0][0]',   \n",
      " ate)                                                             'conv4_block13_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block14_0_bn (BatchNorma  (None, 8, 8, 672)   2688        ['conv4_block13_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block14_0_relu (Activati  (None, 8, 8, 672)   0           ['conv4_block14_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block14_1_conv (Conv2D)  (None, 8, 8, 128)    86016       ['conv4_block14_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block14_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block14_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block14_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block14_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block14_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block14_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block14_concat (Concaten  (None, 8, 8, 704)   0           ['conv4_block13_concat[0][0]',   \n",
      " ate)                                                             'conv4_block14_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block15_0_bn (BatchNorma  (None, 8, 8, 704)   2816        ['conv4_block14_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block15_0_relu (Activati  (None, 8, 8, 704)   0           ['conv4_block15_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block15_1_conv (Conv2D)  (None, 8, 8, 128)    90112       ['conv4_block15_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block15_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block15_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block15_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block15_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block15_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block15_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block15_concat (Concaten  (None, 8, 8, 736)   0           ['conv4_block14_concat[0][0]',   \n",
      " ate)                                                             'conv4_block15_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block16_0_bn (BatchNorma  (None, 8, 8, 736)   2944        ['conv4_block15_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block16_0_relu (Activati  (None, 8, 8, 736)   0           ['conv4_block16_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block16_1_conv (Conv2D)  (None, 8, 8, 128)    94208       ['conv4_block16_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block16_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block16_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block16_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block16_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block16_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block16_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block16_concat (Concaten  (None, 8, 8, 768)   0           ['conv4_block15_concat[0][0]',   \n",
      " ate)                                                             'conv4_block16_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block17_0_bn (BatchNorma  (None, 8, 8, 768)   3072        ['conv4_block16_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block17_0_relu (Activati  (None, 8, 8, 768)   0           ['conv4_block17_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block17_1_conv (Conv2D)  (None, 8, 8, 128)    98304       ['conv4_block17_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block17_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block17_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block17_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block17_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block17_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block17_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block17_concat (Concaten  (None, 8, 8, 800)   0           ['conv4_block16_concat[0][0]',   \n",
      " ate)                                                             'conv4_block17_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block18_0_bn (BatchNorma  (None, 8, 8, 800)   3200        ['conv4_block17_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block18_0_relu (Activati  (None, 8, 8, 800)   0           ['conv4_block18_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block18_1_conv (Conv2D)  (None, 8, 8, 128)    102400      ['conv4_block18_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block18_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block18_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block18_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block18_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block18_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block18_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block18_concat (Concaten  (None, 8, 8, 832)   0           ['conv4_block17_concat[0][0]',   \n",
      " ate)                                                             'conv4_block18_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block19_0_bn (BatchNorma  (None, 8, 8, 832)   3328        ['conv4_block18_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block19_0_relu (Activati  (None, 8, 8, 832)   0           ['conv4_block19_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block19_1_conv (Conv2D)  (None, 8, 8, 128)    106496      ['conv4_block19_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block19_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block19_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block19_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block19_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block19_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block19_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block19_concat (Concaten  (None, 8, 8, 864)   0           ['conv4_block18_concat[0][0]',   \n",
      " ate)                                                             'conv4_block19_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block20_0_bn (BatchNorma  (None, 8, 8, 864)   3456        ['conv4_block19_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block20_0_relu (Activati  (None, 8, 8, 864)   0           ['conv4_block20_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block20_1_conv (Conv2D)  (None, 8, 8, 128)    110592      ['conv4_block20_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block20_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block20_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block20_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block20_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block20_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block20_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block20_concat (Concaten  (None, 8, 8, 896)   0           ['conv4_block19_concat[0][0]',   \n",
      " ate)                                                             'conv4_block20_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block21_0_bn (BatchNorma  (None, 8, 8, 896)   3584        ['conv4_block20_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block21_0_relu (Activati  (None, 8, 8, 896)   0           ['conv4_block21_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block21_1_conv (Conv2D)  (None, 8, 8, 128)    114688      ['conv4_block21_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block21_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block21_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block21_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block21_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block21_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block21_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block21_concat (Concaten  (None, 8, 8, 928)   0           ['conv4_block20_concat[0][0]',   \n",
      " ate)                                                             'conv4_block21_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block22_0_bn (BatchNorma  (None, 8, 8, 928)   3712        ['conv4_block21_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block22_0_relu (Activati  (None, 8, 8, 928)   0           ['conv4_block22_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block22_1_conv (Conv2D)  (None, 8, 8, 128)    118784      ['conv4_block22_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block22_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block22_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block22_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block22_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block22_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block22_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block22_concat (Concaten  (None, 8, 8, 960)   0           ['conv4_block21_concat[0][0]',   \n",
      " ate)                                                             'conv4_block22_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block23_0_bn (BatchNorma  (None, 8, 8, 960)   3840        ['conv4_block22_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block23_0_relu (Activati  (None, 8, 8, 960)   0           ['conv4_block23_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block23_1_conv (Conv2D)  (None, 8, 8, 128)    122880      ['conv4_block23_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block23_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block23_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block23_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block23_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block23_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block23_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block23_concat (Concaten  (None, 8, 8, 992)   0           ['conv4_block22_concat[0][0]',   \n",
      " ate)                                                             'conv4_block23_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block24_0_bn (BatchNorma  (None, 8, 8, 992)   3968        ['conv4_block23_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block24_0_relu (Activati  (None, 8, 8, 992)   0           ['conv4_block24_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block24_1_conv (Conv2D)  (None, 8, 8, 128)    126976      ['conv4_block24_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block24_1_bn (BatchNorma  (None, 8, 8, 128)   512         ['conv4_block24_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block24_1_relu (Activati  (None, 8, 8, 128)   0           ['conv4_block24_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block24_2_conv (Conv2D)  (None, 8, 8, 32)     36864       ['conv4_block24_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv4_block24_concat (Concaten  (None, 8, 8, 1024)  0           ['conv4_block23_concat[0][0]',   \n",
      " ate)                                                             'conv4_block24_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " pool4_bn (BatchNormalization)  (None, 8, 8, 1024)   4096        ['conv4_block24_concat[0][0]']   \n",
      "                                                                                                  \n",
      " pool4_relu (Activation)        (None, 8, 8, 1024)   0           ['pool4_bn[0][0]']               \n",
      "                                                                                                  \n",
      " pool4_conv (Conv2D)            (None, 8, 8, 512)    524288      ['pool4_relu[0][0]']             \n",
      "                                                                                                  \n",
      " pool4_pool (AveragePooling2D)  (None, 4, 4, 512)    0           ['pool4_conv[0][0]']             \n",
      "                                                                                                  \n",
      " conv5_block1_0_bn (BatchNormal  (None, 4, 4, 512)   2048        ['pool4_pool[0][0]']             \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block1_0_relu (Activatio  (None, 4, 4, 512)   0           ['conv5_block1_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block1_1_conv (Conv2D)   (None, 4, 4, 128)    65536       ['conv5_block1_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block1_1_bn (BatchNormal  (None, 4, 4, 128)   512         ['conv5_block1_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block1_1_relu (Activatio  (None, 4, 4, 128)   0           ['conv5_block1_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block1_2_conv (Conv2D)   (None, 4, 4, 32)     36864       ['conv5_block1_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block1_concat (Concatena  (None, 4, 4, 544)   0           ['pool4_pool[0][0]',             \n",
      " te)                                                              'conv5_block1_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block2_0_bn (BatchNormal  (None, 4, 4, 544)   2176        ['conv5_block1_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block2_0_relu (Activatio  (None, 4, 4, 544)   0           ['conv5_block2_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block2_1_conv (Conv2D)   (None, 4, 4, 128)    69632       ['conv5_block2_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block2_1_bn (BatchNormal  (None, 4, 4, 128)   512         ['conv5_block2_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block2_1_relu (Activatio  (None, 4, 4, 128)   0           ['conv5_block2_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block2_2_conv (Conv2D)   (None, 4, 4, 32)     36864       ['conv5_block2_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block2_concat (Concatena  (None, 4, 4, 576)   0           ['conv5_block1_concat[0][0]',    \n",
      " te)                                                              'conv5_block2_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block3_0_bn (BatchNormal  (None, 4, 4, 576)   2304        ['conv5_block2_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block3_0_relu (Activatio  (None, 4, 4, 576)   0           ['conv5_block3_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block3_1_conv (Conv2D)   (None, 4, 4, 128)    73728       ['conv5_block3_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block3_1_bn (BatchNormal  (None, 4, 4, 128)   512         ['conv5_block3_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block3_1_relu (Activatio  (None, 4, 4, 128)   0           ['conv5_block3_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block3_2_conv (Conv2D)   (None, 4, 4, 32)     36864       ['conv5_block3_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block3_concat (Concatena  (None, 4, 4, 608)   0           ['conv5_block2_concat[0][0]',    \n",
      " te)                                                              'conv5_block3_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block4_0_bn (BatchNormal  (None, 4, 4, 608)   2432        ['conv5_block3_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block4_0_relu (Activatio  (None, 4, 4, 608)   0           ['conv5_block4_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block4_1_conv (Conv2D)   (None, 4, 4, 128)    77824       ['conv5_block4_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block4_1_bn (BatchNormal  (None, 4, 4, 128)   512         ['conv5_block4_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block4_1_relu (Activatio  (None, 4, 4, 128)   0           ['conv5_block4_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block4_2_conv (Conv2D)   (None, 4, 4, 32)     36864       ['conv5_block4_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block4_concat (Concatena  (None, 4, 4, 640)   0           ['conv5_block3_concat[0][0]',    \n",
      " te)                                                              'conv5_block4_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block5_0_bn (BatchNormal  (None, 4, 4, 640)   2560        ['conv5_block4_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block5_0_relu (Activatio  (None, 4, 4, 640)   0           ['conv5_block5_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block5_1_conv (Conv2D)   (None, 4, 4, 128)    81920       ['conv5_block5_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block5_1_bn (BatchNormal  (None, 4, 4, 128)   512         ['conv5_block5_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block5_1_relu (Activatio  (None, 4, 4, 128)   0           ['conv5_block5_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block5_2_conv (Conv2D)   (None, 4, 4, 32)     36864       ['conv5_block5_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block5_concat (Concatena  (None, 4, 4, 672)   0           ['conv5_block4_concat[0][0]',    \n",
      " te)                                                              'conv5_block5_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block6_0_bn (BatchNormal  (None, 4, 4, 672)   2688        ['conv5_block5_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block6_0_relu (Activatio  (None, 4, 4, 672)   0           ['conv5_block6_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block6_1_conv (Conv2D)   (None, 4, 4, 128)    86016       ['conv5_block6_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block6_1_bn (BatchNormal  (None, 4, 4, 128)   512         ['conv5_block6_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block6_1_relu (Activatio  (None, 4, 4, 128)   0           ['conv5_block6_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block6_2_conv (Conv2D)   (None, 4, 4, 32)     36864       ['conv5_block6_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block6_concat (Concatena  (None, 4, 4, 704)   0           ['conv5_block5_concat[0][0]',    \n",
      " te)                                                              'conv5_block6_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block7_0_bn (BatchNormal  (None, 4, 4, 704)   2816        ['conv5_block6_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block7_0_relu (Activatio  (None, 4, 4, 704)   0           ['conv5_block7_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block7_1_conv (Conv2D)   (None, 4, 4, 128)    90112       ['conv5_block7_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block7_1_bn (BatchNormal  (None, 4, 4, 128)   512         ['conv5_block7_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block7_1_relu (Activatio  (None, 4, 4, 128)   0           ['conv5_block7_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block7_2_conv (Conv2D)   (None, 4, 4, 32)     36864       ['conv5_block7_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block7_concat (Concatena  (None, 4, 4, 736)   0           ['conv5_block6_concat[0][0]',    \n",
      " te)                                                              'conv5_block7_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block8_0_bn (BatchNormal  (None, 4, 4, 736)   2944        ['conv5_block7_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block8_0_relu (Activatio  (None, 4, 4, 736)   0           ['conv5_block8_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block8_1_conv (Conv2D)   (None, 4, 4, 128)    94208       ['conv5_block8_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block8_1_bn (BatchNormal  (None, 4, 4, 128)   512         ['conv5_block8_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block8_1_relu (Activatio  (None, 4, 4, 128)   0           ['conv5_block8_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block8_2_conv (Conv2D)   (None, 4, 4, 32)     36864       ['conv5_block8_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block8_concat (Concatena  (None, 4, 4, 768)   0           ['conv5_block7_concat[0][0]',    \n",
      " te)                                                              'conv5_block8_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block9_0_bn (BatchNormal  (None, 4, 4, 768)   3072        ['conv5_block8_concat[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block9_0_relu (Activatio  (None, 4, 4, 768)   0           ['conv5_block9_0_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block9_1_conv (Conv2D)   (None, 4, 4, 128)    98304       ['conv5_block9_0_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block9_1_bn (BatchNormal  (None, 4, 4, 128)   512         ['conv5_block9_1_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block9_1_relu (Activatio  (None, 4, 4, 128)   0           ['conv5_block9_1_bn[0][0]']      \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block9_2_conv (Conv2D)   (None, 4, 4, 32)     36864       ['conv5_block9_1_relu[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block9_concat (Concatena  (None, 4, 4, 800)   0           ['conv5_block8_concat[0][0]',    \n",
      " te)                                                              'conv5_block9_2_conv[0][0]']    \n",
      "                                                                                                  \n",
      " conv5_block10_0_bn (BatchNorma  (None, 4, 4, 800)   3200        ['conv5_block9_concat[0][0]']    \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block10_0_relu (Activati  (None, 4, 4, 800)   0           ['conv5_block10_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block10_1_conv (Conv2D)  (None, 4, 4, 128)    102400      ['conv5_block10_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block10_1_bn (BatchNorma  (None, 4, 4, 128)   512         ['conv5_block10_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block10_1_relu (Activati  (None, 4, 4, 128)   0           ['conv5_block10_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block10_2_conv (Conv2D)  (None, 4, 4, 32)     36864       ['conv5_block10_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block10_concat (Concaten  (None, 4, 4, 832)   0           ['conv5_block9_concat[0][0]',    \n",
      " ate)                                                             'conv5_block10_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block11_0_bn (BatchNorma  (None, 4, 4, 832)   3328        ['conv5_block10_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block11_0_relu (Activati  (None, 4, 4, 832)   0           ['conv5_block11_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block11_1_conv (Conv2D)  (None, 4, 4, 128)    106496      ['conv5_block11_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block11_1_bn (BatchNorma  (None, 4, 4, 128)   512         ['conv5_block11_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block11_1_relu (Activati  (None, 4, 4, 128)   0           ['conv5_block11_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block11_2_conv (Conv2D)  (None, 4, 4, 32)     36864       ['conv5_block11_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block11_concat (Concaten  (None, 4, 4, 864)   0           ['conv5_block10_concat[0][0]',   \n",
      " ate)                                                             'conv5_block11_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block12_0_bn (BatchNorma  (None, 4, 4, 864)   3456        ['conv5_block11_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block12_0_relu (Activati  (None, 4, 4, 864)   0           ['conv5_block12_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block12_1_conv (Conv2D)  (None, 4, 4, 128)    110592      ['conv5_block12_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block12_1_bn (BatchNorma  (None, 4, 4, 128)   512         ['conv5_block12_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block12_1_relu (Activati  (None, 4, 4, 128)   0           ['conv5_block12_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block12_2_conv (Conv2D)  (None, 4, 4, 32)     36864       ['conv5_block12_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block12_concat (Concaten  (None, 4, 4, 896)   0           ['conv5_block11_concat[0][0]',   \n",
      " ate)                                                             'conv5_block12_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block13_0_bn (BatchNorma  (None, 4, 4, 896)   3584        ['conv5_block12_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block13_0_relu (Activati  (None, 4, 4, 896)   0           ['conv5_block13_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block13_1_conv (Conv2D)  (None, 4, 4, 128)    114688      ['conv5_block13_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block13_1_bn (BatchNorma  (None, 4, 4, 128)   512         ['conv5_block13_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block13_1_relu (Activati  (None, 4, 4, 128)   0           ['conv5_block13_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block13_2_conv (Conv2D)  (None, 4, 4, 32)     36864       ['conv5_block13_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block13_concat (Concaten  (None, 4, 4, 928)   0           ['conv5_block12_concat[0][0]',   \n",
      " ate)                                                             'conv5_block13_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block14_0_bn (BatchNorma  (None, 4, 4, 928)   3712        ['conv5_block13_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block14_0_relu (Activati  (None, 4, 4, 928)   0           ['conv5_block14_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block14_1_conv (Conv2D)  (None, 4, 4, 128)    118784      ['conv5_block14_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block14_1_bn (BatchNorma  (None, 4, 4, 128)   512         ['conv5_block14_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block14_1_relu (Activati  (None, 4, 4, 128)   0           ['conv5_block14_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block14_2_conv (Conv2D)  (None, 4, 4, 32)     36864       ['conv5_block14_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block14_concat (Concaten  (None, 4, 4, 960)   0           ['conv5_block13_concat[0][0]',   \n",
      " ate)                                                             'conv5_block14_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block15_0_bn (BatchNorma  (None, 4, 4, 960)   3840        ['conv5_block14_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block15_0_relu (Activati  (None, 4, 4, 960)   0           ['conv5_block15_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block15_1_conv (Conv2D)  (None, 4, 4, 128)    122880      ['conv5_block15_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block15_1_bn (BatchNorma  (None, 4, 4, 128)   512         ['conv5_block15_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block15_1_relu (Activati  (None, 4, 4, 128)   0           ['conv5_block15_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block15_2_conv (Conv2D)  (None, 4, 4, 32)     36864       ['conv5_block15_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block15_concat (Concaten  (None, 4, 4, 992)   0           ['conv5_block14_concat[0][0]',   \n",
      " ate)                                                             'conv5_block15_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block16_0_bn (BatchNorma  (None, 4, 4, 992)   3968        ['conv5_block15_concat[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block16_0_relu (Activati  (None, 4, 4, 992)   0           ['conv5_block16_0_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block16_1_conv (Conv2D)  (None, 4, 4, 128)    126976      ['conv5_block16_0_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block16_1_bn (BatchNorma  (None, 4, 4, 128)   512         ['conv5_block16_1_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " conv5_block16_1_relu (Activati  (None, 4, 4, 128)   0           ['conv5_block16_1_bn[0][0]']     \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " conv5_block16_2_conv (Conv2D)  (None, 4, 4, 32)     36864       ['conv5_block16_1_relu[0][0]']   \n",
      "                                                                                                  \n",
      " conv5_block16_concat (Concaten  (None, 4, 4, 1024)  0           ['conv5_block15_concat[0][0]',   \n",
      " ate)                                                             'conv5_block16_2_conv[0][0]']   \n",
      "                                                                                                  \n",
      " bn (BatchNormalization)        (None, 4, 4, 1024)   4096        ['conv5_block16_concat[0][0]']   \n",
      "                                                                                                  \n",
      " relu (Activation)              (None, 4, 4, 1024)   0           ['bn[0][0]']                     \n",
      "                                                                                                  \n",
      "==================================================================================================\n",
      "Total params: 7,037,504\n",
      "Trainable params: 0\n",
      "Non-trainable params: 7,037,504\n",
      "__________________________________________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "from tensorflow.keras.applications import DenseNet121, InceptionV3\n",
    "SIZE_X=128\n",
    "SIZE_Y=128\n",
    "\n",
    "#Load VGG16 model wothout classifier/fully connected layers\n",
    "#Load imagenet weights that we are going to use as feature generators\n",
    "Densenet121 = DenseNet121(weights='imagenet', include_top=False, input_shape=(SIZE_X, SIZE_Y, 3))\n",
    "\n",
    "#Make loaded layers as non-trainable. This is important as we want to work with pre-trained weights\n",
    "for layer in Densenet121.layers:\n",
    "    layer.trainable = False\n",
    "    \n",
    "Densenet121.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f0b91dd3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:35:02.413698Z",
     "iopub.status.busy": "2024-09-21T13:35:02.413310Z",
     "iopub.status.idle": "2024-09-21T13:35:03.140873Z",
     "shell.execute_reply": "2024-09-21T13:35:03.139924Z"
    },
    "papermill": {
     "duration": 0.826995,
     "end_time": "2024-09-21T13:35:03.142917",
     "exception": false,
     "start_time": "2024-09-21T13:35:02.315922",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"model_4\"\n",
      "__________________________________________________________________________________________________\n",
      " Layer (type)                   Output Shape         Param #     Connected to                     \n",
      "==================================================================================================\n",
      " input_original (InputLayer)    [(None, 128, 128, 3  0           []                               \n",
      "                                )]                                                                \n",
      "                                                                                                  \n",
      " input_segmented (InputLayer)   [(None, 128, 128, 3  0           []                               \n",
      "                                )]                                                                \n",
      "                                                                                                  \n",
      " model (Functional)             (None, 8, 8, 512)    14714688    ['input_original[0][0]']         \n",
      "                                                                                                  \n",
      " model_1 (Functional)           (None, 8, 8, 512)    2134592     ['input_segmented[0][0]']        \n",
      "                                                                                                  \n",
      " global_average_pooling2d (Glob  (None, 512)         0           ['model[0][0]']                  \n",
      " alAveragePooling2D)                                                                              \n",
      "                                                                                                  \n",
      " global_average_pooling2d_1 (Gl  (None, 512)         0           ['model_1[0][0]']                \n",
      " obalAveragePooling2D)                                                                            \n",
      "                                                                                                  \n",
      " concatenate (Concatenate)      (None, 1024)         0           ['global_average_pooling2d[0][0]'\n",
      "                                                                 , 'global_average_pooling2d_1[0][\n",
      "                                                                 0]']                             \n",
      "                                                                                                  \n",
      " dense (Dense)                  (None, 1024)         1049600     ['concatenate[0][0]']            \n",
      "                                                                                                  \n",
      " dropout (Dropout)              (None, 1024)         0           ['dense[0][0]']                  \n",
      "                                                                                                  \n",
      " dense_1 (Dense)                (None, 512)          524800      ['dropout[0][0]']                \n",
      "                                                                                                  \n",
      " dropout_1 (Dropout)            (None, 512)          0           ['dense_1[0][0]']                \n",
      "                                                                                                  \n",
      " dense_2 (Dense)                (None, 256)          131328      ['dropout_1[0][0]']              \n",
      "                                                                                                  \n",
      " dense_3 (Dense)                (None, 128)          32896       ['dense_2[0][0]']                \n",
      "                                                                                                  \n",
      " dense_4 (Dense)                (None, 64)           8256        ['dense_3[0][0]']                \n",
      "                                                                                                  \n",
      " dense_5 (Dense)                (None, 32)           2080        ['dense_4[0][0]']                \n",
      "                                                                                                  \n",
      " dense_6 (Dense)                (None, 16)           528         ['dense_5[0][0]']                \n",
      "                                                                                                  \n",
      " dense_7 (Dense)                (None, 4)            68          ['dense_6[0][0]']                \n",
      "                                                                                                  \n",
      "==================================================================================================\n",
      "Total params: 18,598,836\n",
      "Trainable params: 1,749,556\n",
      "Non-trainable params: 16,849,280\n",
      "__________________________________________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "from tensorflow.keras.applications import VGG16\n",
    "from tensorflow.keras.layers import Input, GlobalAveragePooling2D, Dense, concatenate,Dropout\n",
    "from tensorflow.keras.models import Model\n",
    "import numpy as np\n",
    "num_classes=4\n",
    "\n",
    "# Load the VGG16 model\n",
    "VGG_model =Model(inputs=VGG_model.input, outputs=VGG_model.get_layer('block5_conv3').output)\n",
    "Densenet121=Model(inputs=Densenet121.input, outputs=Densenet121.get_layer('conv4_block9_0_bn').output)\n",
    "# Define input shapes for original and segmented images\n",
    "input_original = Input(shape=(128, 128, 3), name='input_original')\n",
    "# input_original = data_augmentation(input_original)\n",
    "input_segmented = Input(shape=(128, 128, 3), name='input_segmented')\n",
    "# input_segmented = data_augmentation(input_segmented)\n",
    "\n",
    "# Create two new models for feature extraction\n",
    "feature_extractor_original = Model(inputs=input_original, outputs=VGG_model(input_original))\n",
    "feature_extractor_segmented = Model(inputs=input_segmented, outputs=Densenet121(input_segmented))\n",
    "\n",
    "# Global Average Pooling layers to reduce dimensions and obtain feature vectors\n",
    "original_features = GlobalAveragePooling2D()(feature_extractor_original.output)\n",
    "segmented_features = GlobalAveragePooling2D()(feature_extractor_segmented.output)\n",
    "\n",
    "# Combine the features\n",
    "combined_features = concatenate([original_features, segmented_features])\n",
    "\n",
    "# Add fully connected layers for classification\n",
    "x = Dense(1024, activation='relu')(combined_features)\n",
    "x = Dropout(0.2)(x)  # Add dropout with a rate of 0.5\n",
    "x = Dense(512, activation='relu')(x)\n",
    "x = Dropout(0.2)(x)  # Add dropout with a rate of 0.5\n",
    "x = Dense(256, activation='relu')(x)\n",
    "\n",
    "x = Dense(128, activation='relu')(x)\n",
    "# x = Dropout(0.3)(x)  # Add dropout with a rate of 0.5\n",
    "# Drop some unnecessary nodes\n",
    "x = Dense(64, activation='relu')(x)\n",
    "# x = Dropout(0.2)(x)  # Add dropout with a rate of 0.5\n",
    "# Gradually decrease the filter size\n",
    "x = Dense(32, activation='relu')(x)\n",
    "# x = Dropout(0.1)(x)  # Add dropout with a rate of 0.5\n",
    "\n",
    "x = Dense(16, activation='relu')(x)\n",
    "\n",
    "output = Dense(num_classes, activation='softmax')(x)\n",
    "\n",
    "# Create the final model\n",
    "model = Model(inputs=[input_original, input_segmented], outputs=output)\n",
    "\n",
    "# Compile the model\n",
    "model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "# Print model summary\n",
    "model.summary()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e2c0370a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:35:03.387777Z",
     "iopub.status.busy": "2024-09-21T13:35:03.386915Z",
     "iopub.status.idle": "2024-09-21T13:35:03.752252Z",
     "shell.execute_reply": "2024-09-21T13:35:03.751304Z"
    },
    "papermill": {
     "duration": 0.470147,
     "end_time": "2024-09-21T13:35:03.755097",
     "exception": false,
     "start_time": "2024-09-21T13:35:03.284950",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from keras.utils.vis_utils import plot_model\n",
    "plot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b938c5c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:35:03.958450Z",
     "iopub.status.busy": "2024-09-21T13:35:03.958094Z",
     "iopub.status.idle": "2024-09-21T13:40:18.224484Z",
     "shell.execute_reply": "2024-09-21T13:40:18.223367Z"
    },
    "papermill": {
     "duration": 314.370469,
     "end_time": "2024-09-21T13:40:18.226551",
     "exception": false,
     "start_time": "2024-09-21T13:35:03.856082",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/50\n",
      "72/72 [==============================] - 22s 148ms/step - loss: 0.8443 - accuracy: 0.6538 - val_loss: 0.5302 - val_accuracy: 0.7914\n",
      "Epoch 2/50\n",
      "72/72 [==============================] - 6s 81ms/step - loss: 0.3897 - accuracy: 0.8455 - val_loss: 0.2618 - val_accuracy: 0.9034\n",
      "Epoch 3/50\n",
      "72/72 [==============================] - 6s 81ms/step - loss: 0.2268 - accuracy: 0.9175 - val_loss: 0.1894 - val_accuracy: 0.9356\n",
      "Epoch 4/50\n",
      "72/72 [==============================] - 6s 81ms/step - loss: 0.1330 - accuracy: 0.9557 - val_loss: 0.1033 - val_accuracy: 0.9663\n",
      "Epoch 5/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0855 - accuracy: 0.9732 - val_loss: 0.1394 - val_accuracy: 0.9525\n",
      "Epoch 6/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.1031 - accuracy: 0.9675 - val_loss: 0.0954 - val_accuracy: 0.9663\n",
      "Epoch 7/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0956 - accuracy: 0.9684 - val_loss: 0.0870 - val_accuracy: 0.9709\n",
      "Epoch 8/50\n",
      "72/72 [==============================] - 6s 84ms/step - loss: 0.1024 - accuracy: 0.9688 - val_loss: 0.0624 - val_accuracy: 0.9831\n",
      "Epoch 9/50\n",
      "72/72 [==============================] - 6s 85ms/step - loss: 0.0532 - accuracy: 0.9851 - val_loss: 0.1716 - val_accuracy: 0.9433\n",
      "Epoch 10/50\n",
      "72/72 [==============================] - 6s 84ms/step - loss: 0.0633 - accuracy: 0.9785 - val_loss: 0.0534 - val_accuracy: 0.9862\n",
      "Epoch 11/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0404 - accuracy: 0.9868 - val_loss: 0.1156 - val_accuracy: 0.9647\n",
      "Epoch 12/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0454 - accuracy: 0.9868 - val_loss: 0.0895 - val_accuracy: 0.9755\n",
      "Epoch 13/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0538 - accuracy: 0.9816 - val_loss: 0.0793 - val_accuracy: 0.9785\n",
      "Epoch 14/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0420 - accuracy: 0.9846 - val_loss: 0.0781 - val_accuracy: 0.9739\n",
      "Epoch 15/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0651 - accuracy: 0.9781 - val_loss: 0.0682 - val_accuracy: 0.9785\n",
      "Epoch 16/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0573 - accuracy: 0.9833 - val_loss: 0.0898 - val_accuracy: 0.9693\n",
      "Epoch 17/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0324 - accuracy: 0.9895 - val_loss: 0.1190 - val_accuracy: 0.9617\n",
      "Epoch 18/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0563 - accuracy: 0.9824 - val_loss: 0.1114 - val_accuracy: 0.9617\n",
      "Epoch 19/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0669 - accuracy: 0.9754 - val_loss: 0.0546 - val_accuracy: 0.9847\n",
      "Epoch 20/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0242 - accuracy: 0.9934 - val_loss: 0.0771 - val_accuracy: 0.9816\n",
      "Epoch 21/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0306 - accuracy: 0.9890 - val_loss: 0.0418 - val_accuracy: 0.9893\n",
      "Epoch 22/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0300 - accuracy: 0.9903 - val_loss: 0.0673 - val_accuracy: 0.9755\n",
      "Epoch 23/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0484 - accuracy: 0.9811 - val_loss: 0.0348 - val_accuracy: 0.9908\n",
      "Epoch 24/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0314 - accuracy: 0.9890 - val_loss: 0.0599 - val_accuracy: 0.9816\n",
      "Epoch 25/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0271 - accuracy: 0.9912 - val_loss: 0.0607 - val_accuracy: 0.9801\n",
      "Epoch 26/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0456 - accuracy: 0.9855 - val_loss: 0.0519 - val_accuracy: 0.9908\n",
      "Epoch 27/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0302 - accuracy: 0.9890 - val_loss: 0.0603 - val_accuracy: 0.9877\n",
      "Epoch 28/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0391 - accuracy: 0.9873 - val_loss: 0.0556 - val_accuracy: 0.9831\n",
      "Epoch 29/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0305 - accuracy: 0.9908 - val_loss: 0.0810 - val_accuracy: 0.9785\n",
      "Epoch 30/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0485 - accuracy: 0.9873 - val_loss: 0.0611 - val_accuracy: 0.9847\n",
      "Epoch 31/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0368 - accuracy: 0.9882 - val_loss: 0.0970 - val_accuracy: 0.9663\n",
      "Epoch 32/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0167 - accuracy: 0.9961 - val_loss: 0.0577 - val_accuracy: 0.9893\n",
      "Epoch 33/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0155 - accuracy: 0.9930 - val_loss: 0.0418 - val_accuracy: 0.9923\n",
      "Epoch 34/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0214 - accuracy: 0.9921 - val_loss: 0.1410 - val_accuracy: 0.9555\n",
      "Epoch 35/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0303 - accuracy: 0.9899 - val_loss: 0.0473 - val_accuracy: 0.9923\n",
      "Epoch 36/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0265 - accuracy: 0.9912 - val_loss: 0.0549 - val_accuracy: 0.9877\n",
      "Epoch 37/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0109 - accuracy: 0.9956 - val_loss: 0.0686 - val_accuracy: 0.9816\n",
      "Epoch 38/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0100 - accuracy: 0.9965 - val_loss: 0.0448 - val_accuracy: 0.9923\n",
      "Epoch 39/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0092 - accuracy: 0.9974 - val_loss: 0.0477 - val_accuracy: 0.9923\n",
      "Epoch 40/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0126 - accuracy: 0.9956 - val_loss: 0.0765 - val_accuracy: 0.9816\n",
      "Epoch 41/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0214 - accuracy: 0.9952 - val_loss: 0.0554 - val_accuracy: 0.9893\n",
      "Epoch 42/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0240 - accuracy: 0.9925 - val_loss: 0.0857 - val_accuracy: 0.9755\n",
      "Epoch 43/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0349 - accuracy: 0.9873 - val_loss: 0.0376 - val_accuracy: 0.9939\n",
      "Epoch 44/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0343 - accuracy: 0.9899 - val_loss: 0.0478 - val_accuracy: 0.9908\n",
      "Epoch 45/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0188 - accuracy: 0.9934 - val_loss: 0.0846 - val_accuracy: 0.9785\n",
      "Epoch 46/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0387 - accuracy: 0.9846 - val_loss: 0.0379 - val_accuracy: 0.9908\n",
      "Epoch 47/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0303 - accuracy: 0.9890 - val_loss: 0.0354 - val_accuracy: 0.9862\n",
      "Epoch 48/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0210 - accuracy: 0.9930 - val_loss: 0.0436 - val_accuracy: 0.9893\n",
      "Epoch 49/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0135 - accuracy: 0.9947 - val_loss: 0.1454 - val_accuracy: 0.9647\n",
      "Epoch 50/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0318 - accuracy: 0.9943 - val_loss: 0.0386 - val_accuracy: 0.9908\n"
     ]
    }
   ],
   "source": [
    "# Train the model using your dataset\n",
    "num_epochs=50\n",
    "batch_size=32\n",
    "history=model.fit([X_train_original, X_train_original],y_train , epochs=num_epochs, batch_size=batch_size,validation_data=([X_val_original,X_val_original], y_val))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f3d6dfdd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:40:18.980587Z",
     "iopub.status.busy": "2024-09-21T13:40:18.980248Z",
     "iopub.status.idle": "2024-09-21T13:40:19.865759Z",
     "shell.execute_reply": "2024-09-21T13:40:19.864945Z"
    },
    "papermill": {
     "duration": 1.263223,
     "end_time": "2024-09-21T13:40:19.867888",
     "exception": false,
     "start_time": "2024-09-21T13:40:18.604665",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "#list all data in history\n",
    "print(history.history.keys())\n",
    "# summarize history for accuracy\n",
    "plt.plot(history.history['accuracy'])\n",
    "plt.plot(history.history['val_accuracy'])\n",
    "plt.title('model accuracy')\n",
    "plt.ylabel('accuracy')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train', 'valid'], loc='upper left')\n",
    "plt.show()\n",
    "# summarize history for loss\n",
    "plt.plot(history.history['loss'])\n",
    "plt.plot(history.history['val_loss'])\n",
    "plt.title('model loss')\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train', 'validation'], loc='upper left')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "aff4ef55",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:40:20.639655Z",
     "iopub.status.busy": "2024-09-21T13:40:20.638796Z",
     "iopub.status.idle": "2024-09-21T13:40:25.623955Z",
     "shell.execute_reply": "2024-09-21T13:40:25.622842Z"
    },
    "papermill": {
     "duration": 5.373225,
     "end_time": "2024-09-21T13:40:25.626113",
     "exception": false,
     "start_time": "2024-09-21T13:40:20.252888",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11/11 [==============================] - 2s 191ms/step - loss: 0.0721 - accuracy: 0.9846\n",
      "11/11 [==============================] - 2s 64ms/step\n"
     ]
    }
   ],
   "source": [
    "# Evaluate the model\n",
    "test_loss, test_accuracy = model.evaluate([X_test_original, X_test_original], y_test)\n",
    "\n",
    "# Make predictions\n",
    "predictions = model.predict([X_test_original, X_test_original])\n",
    "predictions=np.argmax(predictions,axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "4618783e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:40:26.450156Z",
     "iopub.status.busy": "2024-09-21T13:40:26.449793Z",
     "iopub.status.idle": "2024-09-21T13:40:26.464691Z",
     "shell.execute_reply": "2024-09-21T13:40:26.463697Z"
    },
    "papermill": {
     "duration": 0.398979,
     "end_time": "2024-09-21T13:40:26.466563",
     "exception": false,
     "start_time": "2024-09-21T13:40:26.067584",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision:  0.9846471054718478\n",
      "sensivity:  0.9846153846153847\n",
      "specifity:  0.9846153846153847\n",
      "F1-score:  0.9846136800599603\n"
     ]
    }
   ],
   "source": [
    "from sklearn import metrics\n",
    "Precision =  metrics.precision_score(y_test,predictions,\n",
    "                                           average='weighted' )\n",
    "print(\"precision: \",Precision)\n",
    "Sensitivity_recall = metrics.recall_score(y_test, predictions,\n",
    "                                           average='weighted')\n",
    "print(\"sensivity: \",Sensitivity_recall)\n",
    "Specificity = metrics.recall_score(y_test, predictions,\n",
    "                                           average='weighted')\n",
    "print(\"specifity: \",Specificity)\n",
    "F1_score = metrics.f1_score(y_test, predictions,\n",
    "                                           average='weighted')\n",
    "print(\"F1-score: \",F1_score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3b69d591",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:40:27.225753Z",
     "iopub.status.busy": "2024-09-21T13:40:27.225393Z",
     "iopub.status.idle": "2024-09-21T13:40:27.930801Z",
     "shell.execute_reply": "2024-09-21T13:40:27.929880Z"
    },
    "papermill": {
     "duration": 1.089311,
     "end_time": "2024-09-21T13:40:27.932783",
     "exception": false,
     "start_time": "2024-09-21T13:40:26.843472",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "from sklearn.metrics import confusion_matrix\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "# Create the confusion matrix\n",
    "cm = confusion_matrix(y_test, predictions)\n",
    "class_labels=[ 'Benign',\n",
    "    'Early',\n",
    "    'Pre',\n",
    "    'Pro']\n",
    "# Plot the confusion matrix using seaborn and matplotlib\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"Blues\", xticklabels=class_labels, yticklabels=class_labels)\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('True')\n",
    "plt.title('Confusion Matrix')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "86feccc7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:40:28.736422Z",
     "iopub.status.busy": "2024-09-21T13:40:28.735698Z",
     "iopub.status.idle": "2024-09-21T13:40:30.180850Z",
     "shell.execute_reply": "2024-09-21T13:40:30.179890Z"
    },
    "papermill": {
     "duration": 1.8717,
     "end_time": "2024-09-21T13:40:30.182829",
     "exception": false,
     "start_time": "2024-09-21T13:40:28.311129",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11/11 [==============================] - 1s 66ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from itertools import cycle\n",
    "from sklearn import datasets\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.multiclass import OneVsRestClassifier\n",
    "from sklearn.metrics import roc_curve, auc\n",
    "from sklearn.preprocessing import LabelBinarizer\n",
    "\n",
    "\n",
    "\n",
    "lb = LabelBinarizer()\n",
    "y_test_bin = lb.fit_transform(y_test)\n",
    "n_classes = 4\n",
    "predictions = model.predict([X_test_original, X_test_segmented])\n",
    "fpr = dict()\n",
    "tpr = dict()\n",
    "roc_auc = dict()\n",
    "for i in range(n_classes):\n",
    "    fpr[i], tpr[i], _ = roc_curve(y_test_bin[:, i], predictions[:, i])\n",
    "    roc_auc[i] = auc(fpr[i], tpr[i])\n",
    "\n",
    "# Compute micro-average ROC curve and ROC area\n",
    "fpr[\"micro\"], tpr[\"micro\"], _ = roc_curve(y_test_bin.ravel(), predictions.ravel())\n",
    "roc_auc[\"micro\"] = auc(fpr[\"micro\"], tpr[\"micro\"])\n",
    "\n",
    "# Plot all ROC curves\n",
    "plt.figure()\n",
    "lw = 2\n",
    "colors = cycle(['aqua', 'darkorange', 'cornflowerblue'])\n",
    "for i, color in zip(range(n_classes), colors):\n",
    "    plt.plot(fpr[i], tpr[i], color=color, lw=lw,\n",
    "             label='ROC curve of class {0} (area = {1:0.2f})'\n",
    "             ''.format(i, roc_auc[i]))\n",
    "\n",
    "plt.plot(fpr[\"micro\"], tpr[\"micro\"],\n",
    "         color='deeppink', linestyle='-', lw=lw,\n",
    "         label='micro-average ROC curve (area = {0:0.2f})'\n",
    "         ''.format(roc_auc[\"micro\"]))\n",
    "\n",
    "plt.plot([0, 1], [0, 1], 'k--', lw=lw)\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.0])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('Multi-Class ROC Curve')\n",
    "plt.legend(loc=\"lower right\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8b8c2b73",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:40:30.950699Z",
     "iopub.status.busy": "2024-09-21T13:40:30.950090Z",
     "iopub.status.idle": "2024-09-21T13:40:31.645801Z",
     "shell.execute_reply": "2024-09-21T13:40:31.644853Z"
    },
    "papermill": {
     "duration": 1.080973,
     "end_time": "2024-09-21T13:40:31.647781",
     "exception": false,
     "start_time": "2024-09-21T13:40:30.566808",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"model_9\"\n",
      "__________________________________________________________________________________________________\n",
      " Layer (type)                   Output Shape         Param #     Connected to                     \n",
      "==================================================================================================\n",
      " input_original (InputLayer)    [(None, 128, 128, 3  0           []                               \n",
      "                                )]                                                                \n",
      "                                                                                                  \n",
      " input_segmented (InputLayer)   [(None, 128, 128, 3  0           []                               \n",
      "                                )]                                                                \n",
      "                                                                                                  \n",
      " model_5 (Functional)           (None, 8, 8, 512)    14714688    ['input_original[0][0]']         \n",
      "                                                                                                  \n",
      " model_6 (Functional)           (None, 8, 8, 512)    2134592     ['input_segmented[0][0]']        \n",
      "                                                                                                  \n",
      " global_average_pooling2d_2 (Gl  (None, 512)         0           ['model_5[0][0]']                \n",
      " obalAveragePooling2D)                                                                            \n",
      "                                                                                                  \n",
      " global_average_pooling2d_3 (Gl  (None, 512)         0           ['model_6[0][0]']                \n",
      " obalAveragePooling2D)                                                                            \n",
      "                                                                                                  \n",
      " concatenate_1 (Concatenate)    (None, 1024)         0           ['global_average_pooling2d_2[0][0\n",
      "                                                                 ]',                              \n",
      "                                                                  'global_average_pooling2d_3[0][0\n",
      "                                                                 ]']                              \n",
      "                                                                                                  \n",
      " dense_8 (Dense)                (None, 1024)         1049600     ['concatenate_1[0][0]']          \n",
      "                                                                                                  \n",
      " dropout_2 (Dropout)            (None, 1024)         0           ['dense_8[0][0]']                \n",
      "                                                                                                  \n",
      " dense_9 (Dense)                (None, 512)          524800      ['dropout_2[0][0]']              \n",
      "                                                                                                  \n",
      " dropout_3 (Dropout)            (None, 512)          0           ['dense_9[0][0]']                \n",
      "                                                                                                  \n",
      " dense_10 (Dense)               (None, 256)          131328      ['dropout_3[0][0]']              \n",
      "                                                                                                  \n",
      " dense_11 (Dense)               (None, 128)          32896       ['dense_10[0][0]']               \n",
      "                                                                                                  \n",
      " dense_12 (Dense)               (None, 64)           8256        ['dense_11[0][0]']               \n",
      "                                                                                                  \n",
      " dense_13 (Dense)               (None, 32)           2080        ['dense_12[0][0]']               \n",
      "                                                                                                  \n",
      " dense_14 (Dense)               (None, 16)           528         ['dense_13[0][0]']               \n",
      "                                                                                                  \n",
      " dense_15 (Dense)               (None, 4)            68          ['dense_14[0][0]']               \n",
      "                                                                                                  \n",
      "==================================================================================================\n",
      "Total params: 18,598,836\n",
      "Trainable params: 1,749,556\n",
      "Non-trainable params: 16,849,280\n",
      "__________________________________________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "from tensorflow.keras.applications import VGG16\n",
    "from tensorflow.keras.layers import Input, GlobalAveragePooling2D, Dense, concatenate,Dropout\n",
    "from tensorflow.keras.models import Model\n",
    "import numpy as np\n",
    "num_classes=4\n",
    "\n",
    "# Load the VGG16 model\n",
    "VGG_model =Model(inputs=VGG_model.input, outputs=VGG_model.get_layer('block5_conv3').output)\n",
    "Densenet121=Model(inputs=Densenet121.input, outputs=Densenet121.get_layer('conv4_block9_0_bn').output)\n",
    "# Define input shapes for original and segmented images\n",
    "input_original = Input(shape=(128, 128, 3), name='input_original')\n",
    "# input_original = data_augmentation(input_original)\n",
    "input_segmented = Input(shape=(128, 128, 3), name='input_segmented')\n",
    "# input_segmented = data_augmentation(input_segmented)\n",
    "\n",
    "# Create two new models for feature extraction\n",
    "feature_extractor_original = Model(inputs=input_original, outputs=VGG_model(input_original))\n",
    "feature_extractor_segmented = Model(inputs=input_segmented, outputs=Densenet121(input_segmented))\n",
    "\n",
    "# Global Average Pooling layers to reduce dimensions and obtain feature vectors\n",
    "original_features = GlobalAveragePooling2D()(feature_extractor_original.output)\n",
    "segmented_features = GlobalAveragePooling2D()(feature_extractor_segmented.output)\n",
    "\n",
    "# Combine the features\n",
    "combined_features = concatenate([original_features, segmented_features])\n",
    "\n",
    "# Add fully connected layers for classification\n",
    "x = Dense(1024, activation='relu')(combined_features)\n",
    "x = Dropout(0.2)(x)  # Add dropout with a rate of 0.5\n",
    "x = Dense(512, activation='relu')(x)\n",
    "x = Dropout(0.2)(x)  # Add dropout with a rate of 0.5\n",
    "x = Dense(256, activation='relu')(x)\n",
    "\n",
    "x = Dense(128, activation='relu')(x)\n",
    "# x = Dropout(0.3)(x)  # Add dropout with a rate of 0.5\n",
    "# Drop some unnecessary nodes\n",
    "x = Dense(64, activation='relu')(x)\n",
    "# x = Dropout(0.2)(x)  # Add dropout with a rate of 0.5\n",
    "# Gradually decrease the filter size\n",
    "x = Dense(32, activation='relu')(x)\n",
    "# x = Dropout(0.1)(x)  # Add dropout with a rate of 0.5\n",
    "\n",
    "x = Dense(16, activation='relu')(x)\n",
    "\n",
    "output = Dense(num_classes, activation='softmax')(x)\n",
    "\n",
    "# Create the final model\n",
    "model = Model(inputs=[input_original, input_segmented], outputs=output)\n",
    "\n",
    "# Compile the model\n",
    "model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "# Print model summary\n",
    "model.summary()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9820b88b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:40:32.424156Z",
     "iopub.status.busy": "2024-09-21T13:40:32.423815Z",
     "iopub.status.idle": "2024-09-21T13:45:36.407735Z",
     "shell.execute_reply": "2024-09-21T13:45:36.406755Z"
    },
    "papermill": {
     "duration": 304.37411,
     "end_time": "2024-09-21T13:45:36.409864",
     "exception": false,
     "start_time": "2024-09-21T13:40:32.035754",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/50\n",
      "72/72 [==============================] - 13s 105ms/step - loss: 0.7359 - accuracy: 0.7086 - val_loss: 0.5399 - val_accuracy: 0.7592\n",
      "Epoch 2/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.3481 - accuracy: 0.8736 - val_loss: 0.3186 - val_accuracy: 0.8788\n",
      "Epoch 3/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.2522 - accuracy: 0.9210 - val_loss: 0.1749 - val_accuracy: 0.9371\n",
      "Epoch 4/50\n",
      "72/72 [==============================] - 6s 84ms/step - loss: 0.2027 - accuracy: 0.9368 - val_loss: 0.1759 - val_accuracy: 0.9340\n",
      "Epoch 5/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.1626 - accuracy: 0.9452 - val_loss: 0.1730 - val_accuracy: 0.9340\n",
      "Epoch 6/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.1640 - accuracy: 0.9443 - val_loss: 0.1841 - val_accuracy: 0.9433\n",
      "Epoch 7/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.1700 - accuracy: 0.9421 - val_loss: 0.1571 - val_accuracy: 0.9448\n",
      "Epoch 8/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.1304 - accuracy: 0.9592 - val_loss: 0.1403 - val_accuracy: 0.9555\n",
      "Epoch 9/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.1845 - accuracy: 0.9412 - val_loss: 0.1416 - val_accuracy: 0.9571\n",
      "Epoch 10/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.1481 - accuracy: 0.9544 - val_loss: 0.1480 - val_accuracy: 0.9509\n",
      "Epoch 11/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.1098 - accuracy: 0.9627 - val_loss: 0.1946 - val_accuracy: 0.9371\n",
      "Epoch 12/50\n",
      "72/72 [==============================] - 6s 81ms/step - loss: 0.1028 - accuracy: 0.9636 - val_loss: 0.1340 - val_accuracy: 0.9540\n",
      "Epoch 13/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0909 - accuracy: 0.9697 - val_loss: 0.1572 - val_accuracy: 0.9540\n",
      "Epoch 14/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0903 - accuracy: 0.9671 - val_loss: 0.1210 - val_accuracy: 0.9601\n",
      "Epoch 15/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0969 - accuracy: 0.9675 - val_loss: 0.1241 - val_accuracy: 0.9617\n",
      "Epoch 16/50\n",
      "72/72 [==============================] - 6s 83ms/step - loss: 0.0919 - accuracy: 0.9680 - val_loss: 0.1136 - val_accuracy: 0.9617\n",
      "Epoch 17/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0673 - accuracy: 0.9767 - val_loss: 0.1168 - val_accuracy: 0.9693\n",
      "Epoch 18/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0665 - accuracy: 0.9750 - val_loss: 0.1148 - val_accuracy: 0.9663\n",
      "Epoch 19/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0718 - accuracy: 0.9706 - val_loss: 0.1234 - val_accuracy: 0.9632\n",
      "Epoch 20/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0605 - accuracy: 0.9772 - val_loss: 0.1243 - val_accuracy: 0.9663\n",
      "Epoch 21/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0595 - accuracy: 0.9776 - val_loss: 0.1196 - val_accuracy: 0.9678\n",
      "Epoch 22/50\n",
      "72/72 [==============================] - 6s 81ms/step - loss: 0.0657 - accuracy: 0.9759 - val_loss: 0.1679 - val_accuracy: 0.9540\n",
      "Epoch 23/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0550 - accuracy: 0.9820 - val_loss: 0.1307 - val_accuracy: 0.9647\n",
      "Epoch 24/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0739 - accuracy: 0.9754 - val_loss: 0.1383 - val_accuracy: 0.9647\n",
      "Epoch 25/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0803 - accuracy: 0.9728 - val_loss: 0.2403 - val_accuracy: 0.9248\n",
      "Epoch 26/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0818 - accuracy: 0.9706 - val_loss: 0.1201 - val_accuracy: 0.9617\n",
      "Epoch 27/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0511 - accuracy: 0.9829 - val_loss: 0.1071 - val_accuracy: 0.9709\n",
      "Epoch 28/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0683 - accuracy: 0.9767 - val_loss: 0.1364 - val_accuracy: 0.9555\n",
      "Epoch 29/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0457 - accuracy: 0.9803 - val_loss: 0.1197 - val_accuracy: 0.9678\n",
      "Epoch 30/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0741 - accuracy: 0.9763 - val_loss: 0.0997 - val_accuracy: 0.9709\n",
      "Epoch 31/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0454 - accuracy: 0.9824 - val_loss: 0.1338 - val_accuracy: 0.9632\n",
      "Epoch 32/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0659 - accuracy: 0.9759 - val_loss: 0.1438 - val_accuracy: 0.9617\n",
      "Epoch 33/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0422 - accuracy: 0.9855 - val_loss: 0.1605 - val_accuracy: 0.9601\n",
      "Epoch 34/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0438 - accuracy: 0.9829 - val_loss: 0.1250 - val_accuracy: 0.9663\n",
      "Epoch 35/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0532 - accuracy: 0.9789 - val_loss: 0.1102 - val_accuracy: 0.9617\n",
      "Epoch 36/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0224 - accuracy: 0.9925 - val_loss: 0.1403 - val_accuracy: 0.9632\n",
      "Epoch 37/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0496 - accuracy: 0.9829 - val_loss: 0.1064 - val_accuracy: 0.9724\n",
      "Epoch 38/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0619 - accuracy: 0.9811 - val_loss: 0.1368 - val_accuracy: 0.9693\n",
      "Epoch 39/50\n",
      "72/72 [==============================] - 6s 81ms/step - loss: 0.0438 - accuracy: 0.9877 - val_loss: 0.1615 - val_accuracy: 0.9540\n",
      "Epoch 40/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0218 - accuracy: 0.9921 - val_loss: 0.1603 - val_accuracy: 0.9693\n",
      "Epoch 41/50\n",
      "72/72 [==============================] - 6s 81ms/step - loss: 0.0683 - accuracy: 0.9767 - val_loss: 0.0989 - val_accuracy: 0.9663\n",
      "Epoch 42/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0366 - accuracy: 0.9877 - val_loss: 0.1317 - val_accuracy: 0.9678\n",
      "Epoch 43/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0399 - accuracy: 0.9882 - val_loss: 0.1282 - val_accuracy: 0.9739\n",
      "Epoch 44/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0316 - accuracy: 0.9903 - val_loss: 0.1233 - val_accuracy: 0.9709\n",
      "Epoch 45/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0235 - accuracy: 0.9912 - val_loss: 0.2009 - val_accuracy: 0.9555\n",
      "Epoch 46/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0694 - accuracy: 0.9829 - val_loss: 0.2001 - val_accuracy: 0.9617\n",
      "Epoch 47/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0632 - accuracy: 0.9776 - val_loss: 0.1103 - val_accuracy: 0.9755\n",
      "Epoch 48/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0339 - accuracy: 0.9882 - val_loss: 0.2647 - val_accuracy: 0.9387\n",
      "Epoch 49/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0375 - accuracy: 0.9864 - val_loss: 0.1240 - val_accuracy: 0.9724\n",
      "Epoch 50/50\n",
      "72/72 [==============================] - 6s 82ms/step - loss: 0.0298 - accuracy: 0.9890 - val_loss: 0.1723 - val_accuracy: 0.9678\n"
     ]
    }
   ],
   "source": [
    "# Train the model using your dataset\n",
    "num_epochs=50\n",
    "batch_size=32\n",
    "history=model.fit([X_train_segmented, X_train_segmented],y_train , epochs=num_epochs, batch_size=batch_size,validation_data=([X_val_segmented,X_val_segmented], y_val))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "085935c6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:45:37.744468Z",
     "iopub.status.busy": "2024-09-21T13:45:37.743837Z",
     "iopub.status.idle": "2024-09-21T13:45:38.243865Z",
     "shell.execute_reply": "2024-09-21T13:45:38.242889Z"
    },
    "papermill": {
     "duration": 1.174434,
     "end_time": "2024-09-21T13:45:38.246003",
     "exception": false,
     "start_time": "2024-09-21T13:45:37.071569",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "#list all data in history\n",
    "print(history.history.keys())\n",
    "# summarize history for accuracy\n",
    "plt.plot(history.history['accuracy'])\n",
    "plt.plot(history.history['val_accuracy'])\n",
    "plt.title('model accuracy')\n",
    "plt.ylabel('accuracy')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train', 'valid'], loc='upper left')\n",
    "plt.show()\n",
    "# summarize history for loss\n",
    "plt.plot(history.history['loss'])\n",
    "plt.plot(history.history['val_loss'])\n",
    "plt.title('model loss')\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train', 'validation'], loc='upper left')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0b2a9e8a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:45:39.627354Z",
     "iopub.status.busy": "2024-09-21T13:45:39.626714Z",
     "iopub.status.idle": "2024-09-21T13:45:42.636398Z",
     "shell.execute_reply": "2024-09-21T13:45:42.635424Z"
    },
    "papermill": {
     "duration": 3.679817,
     "end_time": "2024-09-21T13:45:42.638517",
     "exception": false,
     "start_time": "2024-09-21T13:45:38.958700",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11/11 [==============================] - 1s 62ms/step - loss: 0.2834 - accuracy: 0.9477\n",
      "11/11 [==============================] - 2s 59ms/step\n"
     ]
    }
   ],
   "source": [
    "# Evaluate the model\n",
    "test_loss, test_accuracy = model.evaluate([X_test_segmented, X_test_segmented], y_test)\n",
    "\n",
    "# Make predictions\n",
    "predictions = model.predict([X_test_segmented, X_test_segmented])\n",
    "predictions=np.argmax(predictions,axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "790ce1e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:45:44.075521Z",
     "iopub.status.busy": "2024-09-21T13:45:44.074588Z",
     "iopub.status.idle": "2024-09-21T13:45:44.089385Z",
     "shell.execute_reply": "2024-09-21T13:45:44.088400Z"
    },
    "papermill": {
     "duration": 0.736994,
     "end_time": "2024-09-21T13:45:44.091421",
     "exception": false,
     "start_time": "2024-09-21T13:45:43.354427",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision:  0.9509946913226905\n",
      "sensivity:  0.9476923076923077\n",
      "specifity:  0.9476923076923077\n",
      "F1-score:  0.9484879754118637\n"
     ]
    }
   ],
   "source": [
    "from sklearn import metrics\n",
    "Precision =  metrics.precision_score(y_test,predictions,\n",
    "                                           average='weighted' )\n",
    "print(\"precision: \",Precision)\n",
    "Sensitivity_recall = metrics.recall_score(y_test, predictions,\n",
    "                                           average='weighted')\n",
    "print(\"sensivity: \",Sensitivity_recall)\n",
    "Specificity = metrics.recall_score(y_test, predictions,\n",
    "                                           average='weighted')\n",
    "print(\"specifity: \",Specificity)\n",
    "F1_score = metrics.f1_score(y_test, predictions,\n",
    "                                           average='weighted')\n",
    "print(\"F1-score: \",F1_score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "91a93d24",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:45:45.493925Z",
     "iopub.status.busy": "2024-09-21T13:45:45.493317Z",
     "iopub.status.idle": "2024-09-21T13:45:45.739735Z",
     "shell.execute_reply": "2024-09-21T13:45:45.738861Z"
    },
    "papermill": {
     "duration": 0.971175,
     "end_time": "2024-09-21T13:45:45.741832",
     "exception": false,
     "start_time": "2024-09-21T13:45:44.770657",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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DqhatarOnj2rMWPGkPwBACRRAQQAALAcbgIBAACwGBJAAAAAiyEBBAAAsBgSQAAAAIshAQQAALAYEkAAHqtLly4uTy5p0KCBnnnmmRyPY/Xq1bLZbDp37lyOnxsA3IEEEECWdenSRTabTTabTb6+voqJidGIESN09epVt573s88+0yuvvJKpviRtAHBzLAQN4JY0bdpUM2fOVGpqqr788kv17t1befLk0eDBg136XblyRb6+vtlyznz58mXLcQDA6qgAArgldrtdERERio6O1hNPPKG4uDgtWrTIOWw7cuRIRUVFOZ8+cvjwYbVv316hoaHKly+fWrVqpYMHDzqPl56erv79+ys0NFTh4eEaNGiQ/rpO/V+HgFNTU/Xcc8+pSJEistvtiomJ0TvvvKODBw+qYcOGkqSwsDDZbDZ16dJFkuRwOJSQkKDixYvL399flStX1ieffOJyni+//FKlS5eWv7+/GjZs6BInAHgDEkAA2cLf319XrlyRJK1YsUK7du3SsmXLtHjxYqWlpalJkyYKCgrSt99+q++++06BgYFq2rSpc59x48Zp1qxZevfdd7Vu3TqdOXNGCxYs+NtzPvroo/rggw80adIk7dixQ9OmTVNgYKCKFCmiTz/9VJK0a9cuHTt2TG+88YYkKSEhQXPmzNHUqVO1bds29evXT507d9aaNWskXUtU27Ztq/vuu0+bN29W9+7d9fzzz7vrxwYApmAIGMC/YhiGVqxYoaVLl6pPnz46efKkAgICNGPGDOfQ73vvvSeHw6EZM2bIZrNJkmbOnKnQ0FCtXr1ajRs31sSJEzV48GC1bdtWkjR16lQtXbr0pufdvXu35s+fr2XLlikuLk6SVKJECef714eLCxYsqNDQUEnXKoajRo3S8uXLVatWLec+69at07Rp01S/fn1NmTJFJUuWdD4ru0yZMtq6davGjBmTjT81ADAXCSCAW7J48WIFBgYqLS1NDodDHTt21LBhw9S7d2/Fxsa6zPvbsmWL9u7dq6CgIJdjpKSkaN++fUpKStKxY8dUs2ZN53u5c+dW9erVMwwDX7d582blypVL9evXz3TMe/fu1aVLl9SoUSOX9itXrqhq1aqSpB07drjEIcmZLAKAtyABBHBLGjZsqClTpsjX11dRUVHKnft/XycBAQEufZOTk3XnnXdq3rx5GY5ToECBWzq/v79/lvdJTk6WJC1ZskSFCxd2ec9ut99SHABwOyIBBHBLAgICFBMTk6m+1apV00cffaSCBQsqODj4hn0iIyO1YcMG1atXT5J09epVbdq0SdWqVbth/9jYWDkcDq1Zs8Y5BPxn1yuQ6enpzrby5cvLbrfr0KFDN60clitXTosWLXJp++GHH/75IgHgNsJNIADcrlOnTsqfP79atWqlb7/9VgcOHNDq1av19NNP648//pAk9e3bV6NHj9bChQu1c+dOPfnkk3+7hl+xYsUUHx+vxx57TAsXLnQec/78+ZKk6Oho2Ww2LV68WCdPnlRycrKCgoI0cOBA9evXT7Nnz9a+ffv0888/680339Ts2bMlSb169dKePXv07LPPateuXXr//fc1a9Ysd/+IACBHkQACcLu8efNq7dq1Klq0qNq2baty5cqpW7duSklJcVYEBwwYoEceeUTx8fGqVauWgoKC1KZNm7897pQpU/TAAw/oySefVNmyZdWjRw9dvHhRklS4cGENHz5czz//vAoVKqSnnnpKkvTKK6/opZdeUkJCgsqVK6emTZtqyZIlKl68uCSpaNGi+vTTT7Vw4UJVrlxZU6dO1ahRo9z40wGAnGczbjbDGgAAAF6JCiAAAIDFkAACAABYDAkgAACAxZAAAgAAWAwJIAAAgMWQAAIAAFgMCSAAAIDFkAACAABYDAkgAACAxZAAAgAAWAwJIAAAgMX8H/2D0n9nmOgoAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "from sklearn.metrics import confusion_matrix\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "# Create the confusion matrix\n",
    "cm = confusion_matrix(y_test, predictions)\n",
    "class_labels=[ 'Benign',\n",
    "    'Early',\n",
    "    'Pre',\n",
    "    'Pro']\n",
    "# Plot the confusion matrix using seaborn and matplotlib\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"Blues\", xticklabels=class_labels, yticklabels=class_labels)\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('True')\n",
    "plt.title('Confusion Matrix')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "f0d6dbe4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-21T13:45:47.079475Z",
     "iopub.status.busy": "2024-09-21T13:45:47.078840Z",
     "iopub.status.idle": "2024-09-21T13:45:48.894085Z",
     "shell.execute_reply": "2024-09-21T13:45:48.893184Z"
    },
    "papermill": {
     "duration": 2.485395,
     "end_time": "2024-09-21T13:45:48.896162",
     "exception": false,
     "start_time": "2024-09-21T13:45:46.410767",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11/11 [==============================] - 1s 65ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from itertools import cycle\n",
    "from sklearn import datasets\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.multiclass import OneVsRestClassifier\n",
    "from sklearn.metrics import roc_curve, auc\n",
    "from sklearn.preprocessing import LabelBinarizer\n",
    "\n",
    "\n",
    "\n",
    "lb = LabelBinarizer()\n",
    "y_test_bin = lb.fit_transform(y_test)\n",
    "n_classes = 4\n",
    "predictions = model.predict([X_test_original, X_test_segmented])\n",
    "fpr = dict()\n",
    "tpr = dict()\n",
    "roc_auc = dict()\n",
    "for i in range(n_classes):\n",
    "    fpr[i], tpr[i], _ = roc_curve(y_test_bin[:, i], predictions[:, i])\n",
    "    roc_auc[i] = auc(fpr[i], tpr[i])\n",
    "\n",
    "# Compute micro-average ROC curve and ROC area\n",
    "fpr[\"micro\"], tpr[\"micro\"], _ = roc_curve(y_test_bin.ravel(), predictions.ravel())\n",
    "roc_auc[\"micro\"] = auc(fpr[\"micro\"], tpr[\"micro\"])\n",
    "\n",
    "# Plot all ROC curves\n",
    "plt.figure()\n",
    "lw = 2\n",
    "colors = cycle(['aqua', 'darkorange', 'cornflowerblue','red'])\n",
    "for i, color in zip(range(n_classes), colors):\n",
    "    plt.plot(fpr[i], tpr[i], color=color, lw=lw,\n",
    "             label='ROC curve of class {0} (area = {1:0.2f})'\n",
    "             ''.format(i, roc_auc[i]))\n",
    "\n",
    "plt.plot(fpr[\"micro\"], tpr[\"micro\"],\n",
    "         color='deeppink', linestyle='-', lw=lw,\n",
    "         label='micro-average ROC curve (area = {0:0.2f})'\n",
    "         ''.format(roc_auc[\"micro\"]))\n",
    "\n",
    "plt.plot([0, 1], [0, 1], 'k--', lw=lw)\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.0])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('Multi-Class ROC Curve')\n",
    "plt.legend(loc=\"lower right\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "156f059d",
   "metadata": {
    "papermill": {
     "duration": 0.76021,
     "end_time": "2024-09-21T13:45:50.327343",
     "exception": false,
     "start_time": "2024-09-21T13:45:49.567133",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 1306086,
     "sourceId": 2175623,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30559,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 708.302575,
   "end_time": "2024-09-21T13:45:54.816120",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-09-21T13:34:06.513545",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
